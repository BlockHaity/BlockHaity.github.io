<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>hyprland下VNC副屏的实现</title>
    <link href="/2025/10/02/hyprland%E4%B8%8B%E8%99%9A%E6%8B%9F%E5%89%AF%E5%B1%8F%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
    <url>/2025/10/02/hyprland%E4%B8%8B%E8%99%9A%E6%8B%9F%E5%89%AF%E5%B1%8F%E7%9A%84%E5%AE%9E%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>USB HUB提供的供电实属不够，根本无法驱动我的副屏，但是华为的手机带有有线投屏，且可以启动一个独立的“电脑模式桌面”，也许可以做远程副屏使用。</p><h2 id="踩过的坑"><a href="#踩过的坑" class="headerlink" title="踩过的坑"></a>踩过的坑</h2><p>在网上搜寻的绝大部分<a href="https://blog.dimeta.top/archives/waylandxia-de-sunshine-xu-ni-ping-mu-pei-zhi">教程</a>都是在Kernel 模拟 EDID + DRM 接口实现的，这显然有误操作风险，万一一个<code>rm -rf</code>不就炸了吗？</p><p><del>btrfs神力让我无忧回滚</del></p><p>然后，我看到了这篇<a href="https://nth233.top/notes/wayvnc">教程</a></p><p>这个是为服务器准备的，创建一个虚拟wayland显示，but，这也做不了副屏啊。</p><p>最后参考<a href="https://css.clsty.link/p/61781423b/hyprland-use-tablet-or-laptop-as-extra-monitor/">这篇</a></p><p>原来hyprland可以直接创建HEADLESS显示啊</p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>用命令<code>hyprctl output create headless</code>来直接创建显示</p><p>然后，用<code>hyprctl monitors</code>就可以看到相关详情了</p><details><summary>输出</summary><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">Monitor</span> <span class="hljs-string">eDP-1</span> <span class="hljs-string">(ID</span> <span class="hljs-number">0</span><span class="hljs-string">):</span><br><span class="hljs-string">1920x1080@60.00000</span> <span class="hljs-string">at</span> <span class="hljs-number">0x0</span><br><span class="hljs-attr">description:</span> <span class="hljs-string">BOE</span> <span class="hljs-number">0x092E</span><br><span class="hljs-attr">make:</span> <span class="hljs-string">BOE</span><br><span class="hljs-attr">model:</span> <span class="hljs-number">0x092E</span><br><span class="hljs-string">physical</span> <span class="hljs-string">size</span> <span class="hljs-string">(mm):</span> <span class="hljs-string">310x170</span><br><span class="hljs-attr">serial:</span> <br><span class="hljs-attr">active workspace:</span> <span class="hljs-number">1</span> <span class="hljs-string">(1)</span><br><span class="hljs-attr">special workspace:</span> <span class="hljs-number">0</span> <span class="hljs-string">()</span><br><span class="hljs-attr">reserved:</span> <span class="hljs-number">0</span> <span class="hljs-number">30</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span><br><span class="hljs-attr">scale:</span> <span class="hljs-number">1.00</span><br><span class="hljs-attr">transform:</span> <span class="hljs-number">0</span><br><span class="hljs-attr">focused:</span> <span class="hljs-literal">yes</span><br><span class="hljs-attr">dpmsStatus:</span> <span class="hljs-number">1</span><br><span class="hljs-attr">vrr:</span> <span class="hljs-literal">false</span><br><span class="hljs-attr">solitary:</span> <span class="hljs-number">0</span><br><span class="hljs-attr">solitaryBlockedBy:</span> <span class="hljs-string">windowed</span> <span class="hljs-string">mode,missing</span> <span class="hljs-string">candidate</span><br><span class="hljs-attr">activelyTearing:</span> <span class="hljs-literal">false</span><br><span class="hljs-attr">tearingBlockedBy:</span> <span class="hljs-string">next</span> <span class="hljs-string">frame</span> <span class="hljs-string">is</span> <span class="hljs-string">not</span> <span class="hljs-string">torn,user</span> <span class="hljs-string">settings,missing</span> <span class="hljs-string">candidate</span><br><span class="hljs-attr">directScanoutTo:</span> <span class="hljs-number">0</span><br><span class="hljs-attr">directScanoutBlockedBy:</span> <span class="hljs-string">user</span> <span class="hljs-string">settings,screen</span> <span class="hljs-string">record/screenshot,missing</span> <span class="hljs-string">candidate</span><br><span class="hljs-attr">disabled:</span> <span class="hljs-literal">false</span><br><span class="hljs-attr">currentFormat:</span> <span class="hljs-string">XRGB8888</span><br><span class="hljs-attr">mirrorOf:</span> <span class="hljs-string">none</span><br><span class="hljs-attr">availableModes:</span> <span class="hljs-string">1920x1080@60.00Hz</span> <span class="hljs-string">1920x1080@48.00Hz</span> <br><br><span class="hljs-string">Monitor</span> <span class="hljs-string">HEADLESS-2</span> <span class="hljs-string">(ID</span> <span class="hljs-number">1</span><span class="hljs-string">):</span><br><span class="hljs-string">1920x1080@60.00000</span> <span class="hljs-string">at</span> <span class="hljs-string">1920x0</span><br><span class="hljs-attr">description:</span> <br><span class="hljs-attr">make:</span> <br><span class="hljs-attr">model:</span> <br><span class="hljs-string">physical</span> <span class="hljs-string">size</span> <span class="hljs-string">(mm):</span> <span class="hljs-number">0x0</span><br><span class="hljs-attr">serial:</span> <br><span class="hljs-attr">active workspace:</span> <span class="hljs-number">2</span> <span class="hljs-string">(2)</span><br><span class="hljs-attr">special workspace:</span> <span class="hljs-number">0</span> <span class="hljs-string">()</span><br><span class="hljs-attr">reserved:</span> <span class="hljs-number">0</span> <span class="hljs-number">30</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span><br><span class="hljs-attr">scale:</span> <span class="hljs-number">1.00</span><br><span class="hljs-attr">transform:</span> <span class="hljs-number">0</span><br><span class="hljs-attr">focused:</span> <span class="hljs-literal">no</span><br><span class="hljs-attr">dpmsStatus:</span> <span class="hljs-number">1</span><br><span class="hljs-attr">vrr:</span> <span class="hljs-literal">false</span><br><span class="hljs-attr">solitary:</span> <span class="hljs-number">0</span><br><span class="hljs-attr">solitaryBlockedBy:</span> <span class="hljs-string">windowed</span> <span class="hljs-string">mode,missing</span> <span class="hljs-string">candidate</span><br><span class="hljs-attr">activelyTearing:</span> <span class="hljs-literal">false</span><br><span class="hljs-attr">tearingBlockedBy:</span> <span class="hljs-string">next</span> <span class="hljs-string">frame</span> <span class="hljs-string">is</span> <span class="hljs-string">not</span> <span class="hljs-string">torn,user</span> <span class="hljs-string">settings,not</span> <span class="hljs-string">supported</span> <span class="hljs-string">by</span> <span class="hljs-string">monitor,missing</span> <span class="hljs-string">candidate</span><br><span class="hljs-attr">directScanoutTo:</span> <span class="hljs-number">0</span><br><span class="hljs-attr">directScanoutBlockedBy:</span> <span class="hljs-string">user</span> <span class="hljs-string">settings,screen</span> <span class="hljs-string">record/screenshot,software</span> <span class="hljs-string">renders/cursors,missing</span> <span class="hljs-string">candidate</span><br><span class="hljs-attr">disabled:</span> <span class="hljs-literal">false</span><br><span class="hljs-attr">currentFormat:</span> <span class="hljs-string">XRGB8888</span><br><span class="hljs-attr">mirrorOf:</span> <span class="hljs-string">none</span><br><span class="hljs-attr">availableModes:</span> <span class="hljs-string">1920x1080@0.06Hz</span> <br></code></pre></td></tr></table></figure></details><p>这里可以看到，虚拟显示编号为<code>HEADLESS-2</code></p><p>然后，用下面的命令来<a href="https://wiki.hyprland.org/Configuring/Monitors/">设置显示</a></p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs smali">hyprctl keyword<span class="hljs-built_in"> monitor </span>&lt;显示编号&gt;,&lt;分辨率&gt;@&lt;刷新率&gt;,&lt;位置&gt;<br></code></pre></td></tr></table></figure><p>例如</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs smali">hyprctl keyword<span class="hljs-built_in"> monitor </span>HEADLESS-2,1920x1080@60,1920x0<br></code></pre></td></tr></table></figure><p>为啥不用配置文件呢？因为我们无法保证创建的显示编号永远为一个定植，所以，采用命令的方式创建。</p><p>接下来就可以用wayvnc来打开显示了</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">wayvnc</span> -o=&lt;显示编号&gt; <span class="hljs-number">0.0.0.0</span> <span class="hljs-number">5900</span> -g -r<br></code></pre></td></tr></table></figure><p>用VNC客户端连接即可</p><h2 id="使用体验"><a href="#使用体验" class="headerlink" title="使用体验"></a>使用体验</h2><p>理论上，FPS可以无限高，但是AVNC连上之后动画就卡卡的，不过还算流畅和跟手，播放视频可很流畅。</p>]]></content>
    
    
    <categories>
      
      <category>折腾</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Hyprland</tag>
      
      <tag>Wayland</tag>
      
      <tag>虚拟副屏</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BAAH在逆天环境下的运行</title>
    <link href="/2025/02/10/BAAH%E5%9C%A8%E9%80%86%E5%A4%A9%E7%8E%AF%E5%A2%83%E4%B8%8B%E7%9A%84%E8%BF%90%E8%A1%8C/"/>
    <url>/2025/02/10/BAAH%E5%9C%A8%E9%80%86%E5%A4%A9%E7%8E%AF%E5%A2%83%E4%B8%8B%E7%9A%84%E8%BF%90%E8%A1%8C/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这可以看成用手机搭建家庭服务器的DLC</p><p>因为作为高中牲的作者要去上学了，而没有时间去肝BA，就想自动清日常，所以有了这篇文章。</p><p>感谢 <strong>BAAH - 问题解答群</strong> 中的大佬帮助，有了这篇文章</p><h1 id="环境概览"><a href="#环境概览" class="headerlink" title="环境概览"></a>环境概览</h1><p>Termux neofetch如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash">~ $  neofetch<br><br>         -o          o-            u0_a224@localhost <br>          +hydNNNNdyh+             ----------------- <br>        +mMMMMMMMMMMMMm+           OS: Android 10 aarch64 <br>      `dMMm:NMMMMMMN:mMMd`         Host: HUAWEI ELE-AL00 <br>      hMMMMMMMMMMMMMMMMMMh         Kernel: 4.14.116 <br>  ..  yyyyyyyyyyyyyyyyyyyy  ..     Uptime: 6 days, 22 hours, 43 mins <br>.mMMm`MMMMMMMMMMMMMMMMMMMM`mMMm.   Packages: 364 (dpkg), 1 (pkg) <br>:MMMM-MMMMMMMMMMMMMMMMMMMM-MMMM:   Shell: zsh 5.9 <br>:MMMM-MMMMMMMMMMMMMMMMMMMM-MMMM:   Terminal: /dev/pts/8 <br>:MMMM-MMMMMMMMMMMMMMMMMMMM-MMMM:   CPU: vendor Kirin980 (8) @ 1.805GHz <br>:MMMM-MMMMMMMMMMMMMMMMMMMM-MMMM:   Memory: 4868MiB / 7606MiB <br>-MMMM-MMMMMMMMMMMMMMMMMMMM-MMMM-<br> +yy+ MMMMMMMMMMMMMMMMMMMM +yy+                            <br>      mMMMMMMMMMMMMMMMMMMm                                 <br>      `/++MMMMh++hMMMM++/`<br>          MMMMo  oMMMM<br>          MMMMo  oMMMM<br>          oNMm-  -mMNs<br></code></pre></td></tr></table></figure><p>由于直接在termux裸环境下部署会出现轮子构建问题，所以全程在proot容器中运行</p><h1 id="开始部署"><a href="#开始部署" class="headerlink" title="开始部署"></a>开始部署</h1><p>首先，你需要使用shizuku来提供一个模拟设备序列号</p><p><a href="https://shizuku.rikka.app/zh-hans/guide/setup/">https://shizuku.rikka.app/zh-hans/guide/setup/</a></p><h2 id="创建容器"><a href="#创建容器" class="headerlink" title="创建容器"></a>创建容器</h2><p>由于proot-distro的容器源在Github，国内连接困难，所以使用tmoe进行安装</p><p>我目前认为你已经对termux环境有了基本的配置，如换源等</p><p>在终端下运行下列命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">pkg install curl -y<br>curl -LO https://gitee.com/mo2/linux/raw/2/2.awk; awk -f 2.awk<br></code></pre></td></tr></table></figure><p>如果使用zerotermux则可以直接在侧栏中找到</p><p>这里，有视频教程来安装容器</p><p><a href="https://www.bilibili.com/video/BV16u4y1M7yG">BiliBili - 在下莫老师 - 坏了，这回手机真变电脑了！给手机安装Linux系统，变身生产力神器</a></p><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?isOutside=true&aid=922458285&bvid=BV16u4y1M7yG&cid=1373006711&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;" ></iframe></div><p>不过，需要安装Ubuntu 24.04 LTS容器，此容器提供符合BAAH运行的Python3.12</p><p>容器建议不创建sudo用户，不配置zsh，删除zsh-i，运行tmoe tools，出现CUI后使用方向键和回车退出。</p><p>然后你将会见到 <code>root@localhost ~ #</code></p><p>这时，连续输入三次 <code>exit</code> 并回车，当看见 <code>Press Enter to continue</code> 时回车两次重新进入容器以避免莫名其妙的bug</p><h2 id="获取源码，创建虚拟环境"><a href="#获取源码，创建虚拟环境" class="headerlink" title="获取源码，创建虚拟环境"></a>获取源码，创建虚拟环境</h2><p>运行下列命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt-get update<br>apt-get install python3-full git adb -y<br>git <span class="hljs-built_in">clone</span> https://gitee.com/sammusen/BAAH.git<br><span class="hljs-built_in">cd</span> BAAH<br>python -m venv .venv <span class="hljs-comment"># 创建虚拟环境，解决PEP 668</span><br><span class="hljs-built_in">source</span> .venv/bin/activate <span class="hljs-comment"># 激活虚拟环境</span><br></code></pre></td></tr></table></figure><p>之后，你可以看到你的shell变成了 <code>(.venv) root@localhost ~/BAAH #</code></p><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><p>由于python3.12移除了部分包的老版本，需要修改依赖列表来强行兼容。</p><p>tips：ubuntu上游python的更新可能使配置的依赖随时失效，可以在群内@BlockHaity</p><p>在终端内运行 <code>nano requirements.txt</code></p><p>然后找到 <code>onnxruntime</code> 将右边的数字改为 1.17.0</p><p>然后按下 ctrl + o 后按下 ctrl + x 保存并退出</p><p>接下来运行下列命令安装依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install -i https://mirrors.ustc.edu.cn/pypi/simple pip -U<br>pip config <span class="hljs-built_in">set</span> global.index-url https://mirrors.ustc.edu.cn/pypi/simple<br>pip install -r requirements.txt<br></code></pre></td></tr></table></figure><p>这时，基本配置好了，可以使用 <code>python3 jsoneditor.py --host &lt;局域网ip&gt; --port 8000</code> 来运行webui</p><h2 id="排障"><a href="#排障" class="headerlink" title="排障"></a>排障</h2><h3 id="无法运行"><a href="#无法运行" class="headerlink" title="无法运行"></a>无法运行</h3><p>在作者的手机上出现了这个问题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">Error <span class="hljs-keyword">in</span> cpuinfo: failed to parse the list of possible processors <span class="hljs-keyword">in</span> /sys/devices/system/cpu/possible<br>Error <span class="hljs-keyword">in</span> cpuinfo: failed to parse the list of present processors <span class="hljs-keyword">in</span> /sys/devices/system/cpu/present<br>Error <span class="hljs-keyword">in</span> cpuinfo: failed to parse both lists of possible and present processors<br>terminate called after throwing an instance of <span class="hljs-string">&#x27;onnxruntime::OnnxRuntimeException&#x27;</span><br>  what():  /onnxruntime_src/include/onnxruntime/core/common/logging/logging.h:309 static const onnxruntime::logging::Logger&amp; onnxruntime::logging::LoggingManager::DefaultLogger() Attempt to use DefaultLogger but none has been registered.<br><br>已中止<br></code></pre></td></tr></table></figure><p>deepseek给出的回答为cpuinfo库解析处理器信息失败，而事实上文件并不存在。</p><p>所以需要伪造文件</p><p>输入 <code>exit</code> 并回车，然后不断选择最下面的项目，退出tmoe。</p><p>然后运行下列命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> .<span class="hljs-built_in">local</span>/share/tmoe-linux/containers/proot/ubuntu-noble_arm64/sys<br><span class="hljs-built_in">mkdir</span> devices<br><span class="hljs-built_in">cd</span> devices<br><span class="hljs-built_in">mkdir</span> system<br><span class="hljs-built_in">cd</span> system<br><span class="hljs-built_in">mkdir</span> cpu<br><span class="hljs-built_in">cd</span> cpu<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;0-7&quot;</span> &gt; possible <span class="hljs-comment"># 0-7应填写soc的实际情况，如为8核心soc,则填写0-7,超线程情况下应填写0-实际线程数减1</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;0-7&quot;</span> &gt; present<br><span class="hljs-built_in">cd</span> ~<br></code></pre></td></tr></table></figure><p>然后运行下列命令进入环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">debian<br><span class="hljs-built_in">cd</span> BAAH<br><span class="hljs-built_in">source</span> .venv/bin/activate<br></code></pre></td></tr></table></figure><p>这时应该可以运行webui了。</p><h3 id="aria2无法下载"><a href="#aria2无法下载" class="headerlink" title="aria2无法下载"></a>aria2无法下载</h3><p>在proot环境中，aria2是无法正确发送请求的，也无法下载，所以。我们需要把wget伪装成aria2</p><p>首先，在容器内运行下面的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">touch</span> /usr/bin/aria2c<br>sudo <span class="hljs-built_in">chmod</span> 777 /usr/bin/aria2c<br></code></pre></td></tr></table></figure><p>然后，用<code>nano /usr/share/aria2c</code> 来编辑文件，写入下面内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><br><span class="hljs-comment"># aria2伪装脚本 - 使用wget模拟aria2的基本功能</span><br><br><span class="hljs-comment"># 显示帮助信息</span><br><span class="hljs-function"><span class="hljs-title">show_help</span></span>() &#123;<br>    <span class="hljs-built_in">cat</span> &lt;&lt; <span class="hljs-string">EOF</span><br><span class="hljs-string">用法: aria2c [选项]... [URL]...</span><br><span class="hljs-string"></span><br><span class="hljs-string">使用wget模拟aria2下载器的基本功能</span><br><span class="hljs-string"></span><br><span class="hljs-string">常用选项:</span><br><span class="hljs-string">  -s, --split=N          分割下载段数(模拟，实际单线程)</span><br><span class="hljs-string">  -j, --max-concurrent-downloads=N  最大并发下载数(模拟)</span><br><span class="hljs-string">  -x, --max-connection-per-server=N 每服务器最大连接数(模拟)</span><br><span class="hljs-string">  -k, --min-split-size=N 最小分割大小</span><br><span class="hljs-string">  -c, --continue         断点续传</span><br><span class="hljs-string">  -d, --dir=DIR          下载目录</span><br><span class="hljs-string">  -o, --out=FILE         输出文件名</span><br><span class="hljs-string">  -V, --version          显示版本信息</span><br><span class="hljs-string">  -h, --help             显示此帮助信息</span><br><span class="hljs-string"></span><br><span class="hljs-string">示例:</span><br><span class="hljs-string">  aria2c http://example.com/file.zip</span><br><span class="hljs-string">  aria2c -s 4 -c http://example.com/largefile.iso</span><br><span class="hljs-string">  aria2c -o myfile.zip http://example.com/file.zip</span><br><span class="hljs-string"></span><br><span class="hljs-string">注意: 这是一个使用wget的模拟脚本，并非真正的aria2</span><br><span class="hljs-string">EOF</span><br>&#125;<br><br><span class="hljs-comment"># 显示版本信息</span><br><span class="hljs-function"><span class="hljs-title">show_version</span></span>() &#123;<br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;aria2c (伪装版) 1.0.0&quot;</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;使用wget <span class="hljs-variable">$&#123;wget_version&#125;</span> 作为后端&quot;</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;这是一个模拟aria2的伪装脚本&quot;</span><br>&#125;<br><br><span class="hljs-comment"># 初始化变量</span><br>SPLIT=1<br>MAX_CONCURRENT=1<br>MAX_CONNECTION=1<br>CONTINUE=<span class="hljs-literal">false</span><br>DOWNLOAD_DIR=<span class="hljs-string">&quot;.&quot;</span><br>OUTPUT_FILE=<span class="hljs-string">&quot;&quot;</span><br>URLS=()<br>WGET_ARGS=()<br>exit_code=0  <span class="hljs-comment"># 初始化退出码</span><br><br><span class="hljs-comment"># 获取wget版本</span><br>wget_version=$(wget --version | <span class="hljs-built_in">head</span> -n1 | awk <span class="hljs-string">&#x27;&#123;print $3&#125;&#x27;</span>)<br><br><span class="hljs-comment"># 解析命令行参数</span><br><span class="hljs-keyword">while</span> [[ <span class="hljs-variable">$#</span> -gt 0 ]]; <span class="hljs-keyword">do</span><br>    <span class="hljs-keyword">case</span> <span class="hljs-variable">$1</span> <span class="hljs-keyword">in</span><br>        -s|--<span class="hljs-built_in">split</span>)<br>            SPLIT=<span class="hljs-string">&quot;<span class="hljs-variable">$2</span>&quot;</span><br>            <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;信息: 分割下载设置为 <span class="hljs-variable">$&#123;SPLIT&#125;</span> 段(模拟)&quot;</span><br>            <span class="hljs-built_in">shift</span> 2<br>            ;;<br>        -j|--max-concurrent-downloads)<br>            MAX_CONCURRENT=<span class="hljs-string">&quot;<span class="hljs-variable">$2</span>&quot;</span><br>            <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;信息: 最大并发下载数设置为 <span class="hljs-variable">$&#123;MAX_CONCURRENT&#125;</span>(模拟)&quot;</span><br>            <span class="hljs-built_in">shift</span> 2<br>            ;;<br>        -x|--max-connection-per-server)<br>            MAX_CONNECTION=<span class="hljs-string">&quot;<span class="hljs-variable">$2</span>&quot;</span><br>            <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;信息: 每服务器最大连接数设置为 <span class="hljs-variable">$&#123;MAX_CONNECTION&#125;</span>(模拟)&quot;</span><br>            <span class="hljs-built_in">shift</span> 2<br>            ;;<br>        -k|--min-split-size)<br>            <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;信息: 最小分割大小设置为 <span class="hljs-variable">$2</span>(模拟)&quot;</span><br>            <span class="hljs-built_in">shift</span> 2<br>            ;;<br>        -c|--<span class="hljs-built_in">continue</span>)<br>            CONTINUE=<span class="hljs-literal">true</span><br>            WGET_ARGS+=(<span class="hljs-string">&quot;-c&quot;</span>)<br>            <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;信息: 启用断点续传&quot;</span><br>            <span class="hljs-built_in">shift</span><br>            ;;<br>        -d|--<span class="hljs-built_in">dir</span>)<br>            DOWNLOAD_DIR=<span class="hljs-string">&quot;<span class="hljs-variable">$2</span>&quot;</span><br>            WGET_ARGS+=(<span class="hljs-string">&quot;-P&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$2</span>&quot;</span>)<br>            <span class="hljs-built_in">shift</span> 2<br>            ;;<br>        -o|--out)<br>            OUTPUT_FILE=<span class="hljs-string">&quot;<span class="hljs-variable">$2</span>&quot;</span><br>            <span class="hljs-built_in">shift</span> 2<br>            ;;<br>        -V|--version)<br>            show_version<br>            <span class="hljs-built_in">exit</span> 0<br>            ;;<br>        -h|--<span class="hljs-built_in">help</span>)<br>            show_help<br>            <span class="hljs-built_in">exit</span> 0<br>            ;;<br>        http://*|https://*|ftp://*)<br>            URLS+=(<span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span>)<br>            <span class="hljs-built_in">shift</span><br>            ;;<br>        *)<br>            <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;警告: 忽略未知选项 &#x27;<span class="hljs-variable">$1</span>&#x27;&quot;</span><br>            <span class="hljs-built_in">shift</span><br>            ;;<br>    <span class="hljs-keyword">esac</span><br><span class="hljs-keyword">done</span><br><br><span class="hljs-comment"># 检查是否有URL提供</span><br><span class="hljs-keyword">if</span> [ <span class="hljs-variable">$&#123;#URLS[@]&#125;</span> -eq 0 ]; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;错误: 没有指定下载URL&quot;</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;使用 -h 选项查看帮助信息&quot;</span><br>    <span class="hljs-built_in">exit</span> 1<br><span class="hljs-keyword">fi</span><br><br><span class="hljs-comment"># 检查下载目录是否存在</span><br><span class="hljs-keyword">if</span> [ ! -d <span class="hljs-string">&quot;<span class="hljs-variable">$DOWNLOAD_DIR</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;创建下载目录: <span class="hljs-variable">$DOWNLOAD_DIR</span>&quot;</span><br>    <span class="hljs-built_in">mkdir</span> -p <span class="hljs-string">&quot;<span class="hljs-variable">$DOWNLOAD_DIR</span>&quot;</span><br><span class="hljs-keyword">fi</span><br><br><span class="hljs-comment"># 模拟aria2的输出格式</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;`date +&#x27;%Y-%m-%d %H:%M:%S&#x27;` Starting aria2c (伪装版) with wget backend&quot;</span><br><br><span class="hljs-comment"># 下载每个URL</span><br><span class="hljs-keyword">for</span> url <span class="hljs-keyword">in</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;URLS[@]&#125;</span>&quot;</span>; <span class="hljs-keyword">do</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;`date +&#x27;%Y-%m-%d %H:%M:%S&#x27;` Downloading: <span class="hljs-variable">$url</span>&quot;</span><br>    <br>    <span class="hljs-comment"># 构建输出文件参数</span><br>    current_wget_args=(<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;WGET_ARGS[@]&#125;</span>&quot;</span>)<br>    <span class="hljs-keyword">if</span> [ -n <span class="hljs-string">&quot;<span class="hljs-variable">$OUTPUT_FILE</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>        <span class="hljs-comment"># 如果指定了输出文件名，只对第一个URL使用，或者为每个URL生成唯一文件名</span><br>        <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$&#123;#URLS[@]&#125;</span> -eq 1 ] || [ <span class="hljs-string">&quot;<span class="hljs-variable">$url</span>&quot;</span> == <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;URLS[0]&#125;</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>            current_wget_args+=(<span class="hljs-string">&quot;-O&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$OUTPUT_FILE</span>&quot;</span>)<br>            <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;`date +&#x27;%Y-%m-%d %H:%M:%S&#x27;` Output file: <span class="hljs-variable">$OUTPUT_FILE</span>&quot;</span><br>        <span class="hljs-keyword">else</span><br>            <span class="hljs-comment"># 多个URL时，为后续URL使用默认文件名</span><br>            filename_from_url=$(<span class="hljs-built_in">basename</span> <span class="hljs-string">&quot;<span class="hljs-variable">$url</span>&quot;</span>)<br>            current_wget_args+=(<span class="hljs-string">&quot;-O&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$filename_from_url</span>&quot;</span>)<br>            <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;`date +&#x27;%Y-%m-%d %H:%M:%S&#x27;` Output file: <span class="hljs-variable">$filename_from_url</span>&quot;</span><br>        <span class="hljs-keyword">fi</span><br>    <span class="hljs-keyword">fi</span><br>    <br>    <span class="hljs-comment"># 执行wget下载</span><br>    <span class="hljs-keyword">if</span> wget <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;current_wget_args[@]&#125;</span>&quot;</span> <span class="hljs-string">&quot;<span class="hljs-variable">$url</span>&quot;</span>; <span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;`date +&#x27;%Y-%m-%d %H:%M:%S&#x27;` Download complete: <span class="hljs-variable">$url</span>&quot;</span><br>        <br>        <span class="hljs-comment"># 获取下载的文件信息</span><br>        <span class="hljs-keyword">if</span> [ -n <span class="hljs-string">&quot;<span class="hljs-variable">$OUTPUT_FILE</span>&quot;</span> ] &amp;&amp; [ <span class="hljs-variable">$&#123;#URLS[@]&#125;</span> -eq 1 ]; <span class="hljs-keyword">then</span><br>            filename=<span class="hljs-string">&quot;<span class="hljs-variable">$OUTPUT_FILE</span>&quot;</span><br>        <span class="hljs-keyword">else</span><br>            filename=$(<span class="hljs-built_in">basename</span> <span class="hljs-string">&quot;<span class="hljs-variable">$url</span>&quot;</span>)<br>        <span class="hljs-keyword">fi</span><br>        <br>        <span class="hljs-keyword">if</span> [ -f <span class="hljs-string">&quot;<span class="hljs-variable">$DOWNLOAD_DIR</span>/<span class="hljs-variable">$filename</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>            size=$(<span class="hljs-built_in">stat</span> -c%s <span class="hljs-string">&quot;<span class="hljs-variable">$DOWNLOAD_DIR</span>/<span class="hljs-variable">$filename</span>&quot;</span> 2&gt;/dev/null || <span class="hljs-built_in">stat</span> -f%z <span class="hljs-string">&quot;<span class="hljs-variable">$DOWNLOAD_DIR</span>/<span class="hljs-variable">$filename</span>&quot;</span> 2&gt;/dev/null)<br>            <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;`date +&#x27;%Y-%m-%d %H:%M:%S&#x27;` File: <span class="hljs-variable">$filename</span>, Size: <span class="hljs-variable">$size</span> bytes&quot;</span><br>        <span class="hljs-keyword">elif</span> [ -f <span class="hljs-string">&quot;<span class="hljs-variable">$filename</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>            size=$(<span class="hljs-built_in">stat</span> -c%s <span class="hljs-string">&quot;<span class="hljs-variable">$filename</span>&quot;</span> 2&gt;/dev/null || <span class="hljs-built_in">stat</span> -f%z <span class="hljs-string">&quot;<span class="hljs-variable">$filename</span>&quot;</span> 2&gt;/dev/null)<br>            <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;`date +&#x27;%Y-%m-%d %H:%M:%S&#x27;` File: <span class="hljs-variable">$filename</span>, Size: <span class="hljs-variable">$size</span> bytes&quot;</span><br>        <span class="hljs-keyword">fi</span><br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;`date +&#x27;%Y-%m-%d %H:%M:%S&#x27;` Download failed: <span class="hljs-variable">$url</span>&quot;</span><br>        exit_code=1<br>        <span class="hljs-comment"># 不立即退出，继续尝试其他URL（如果有的话）</span><br>    <span class="hljs-keyword">fi</span><br><span class="hljs-keyword">done</span><br><br><span class="hljs-keyword">if</span> [ <span class="hljs-variable">$exit_code</span> -eq 0 ]; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;`date +&#x27;%Y-%m-%d %H:%M:%S&#x27;` All downloads completed successfully&quot;</span><br><span class="hljs-keyword">else</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;`date +&#x27;%Y-%m-%d %H:%M:%S&#x27;` Some downloads failed&quot;</span><br><span class="hljs-keyword">fi</span><br><br><span class="hljs-built_in">exit</span> <span class="hljs-variable">$exit_code</span><br></code></pre></td></tr></table></figure><h1 id="开始自动化运行"><a href="#开始自动化运行" class="headerlink" title="开始自动化运行"></a>开始自动化运行</h1><p>首先，参考此视频来学习BAAH的配置</p><p><a href="https://www.bilibili.com/video/BV1ZxfGYSEVr/">BiliBili - 糖糖-belief - 【蔚蓝档案电脑版】自动化碧蓝档案每日任务工具BAAH教程</a></p><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?isOutside=true&aid=113877383648785&bvid=BV1ZxfGYSEVr&cid=28301724347&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;" ></iframe></div><p>在此环境下，配置基本相同，但是要修改一部分</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">adb devices<br></code></pre></td></tr></table></figure><p>此命令用来获取序列号，若弹出授权提示，始终允许即可。作者的为 <code>emulate-5554</code></p><p>将配置中的连接序列号改为你的设备。</p><p>其他设置中adb路径改为 <code>/usr/bin/adb</code></p><p>将aria2路径设置为 <code>/usr/bin/aria2c</code></p><p>自动运行则使用MCSManager来提供</p><h2 id="安装MCSManager"><a href="#安装MCSManager" class="headerlink" title="安装MCSManager"></a>安装MCSManager</h2><p>为啥要安装MCSManager,因为它可以提供像Windows计划任务程序的自动运行功能</p><p>先用exit退出容器，然后再次进入容器，保证目录正确。</p><p>首先，安装Nodejs</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt install -y nodejs-lts npm tmux<br>npm config <span class="hljs-built_in">set</span> registry https://registry.npmmirror.com <span class="hljs-comment">#配置镜像</span><br></code></pre></td></tr></table></figure><p>然后，下载并安装MCSManager</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://v6.gh-proxy.com/https://github.com/MCSManager/MCSManager/releases/latest/download/mcsmanager_linux_release.tar.gz<br>tar --strip-components=1 -xzvf mcsmanager_linux_release.tar.gz<br><span class="hljs-built_in">cd</span> mcsmanager<br>bash ./install.sh<br></code></pre></td></tr></table></figure><p>然后运行MCSManager</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">tmux<br><br><span class="hljs-comment"># 然后你会看到一个代底部绿条的终端，使用Ctrl+B,然后按Shift+“来分屏，使用Ctrl+B然后按上下键来切换光标</span><br><br><span class="hljs-comment"># 第一个窗口内</span><br>bash ./start-daemon.sh<br><br><span class="hljs-comment"># 第二个窗口内</span><br>bash ./start-web.sh<br></code></pre></td></tr></table></figure><p>然后打开手机的浏览器，进入 <code>localhost:23333</code> 创建管理员账户和密码 <strong>一定要记住！非常重要！</strong></p><p>然后新建一个实例，部署在 <strong>localhost:24444</strong></p><p>程序类型选择 <strong>部署任意控制台程序</strong></p><p>部署方式选择 <strong>无需额外文件</strong></p><p>名称任意，运行命令输入 <code>bash ./run.sh</code></p><p>创建完成后，进入文件管理，创建 <strong>run.sh</strong> 然后编辑，输入以下内容.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">adb start-server<br><span class="hljs-built_in">sleep</span> 5<br>adb devices<br>adb shell wm size 1280x720<br><span class="hljs-built_in">cd</span> ~/BAAH<br><span class="hljs-built_in">source</span> .venv/bin/activate<br>python3 main.py &lt;你的配置文件名&gt;<br>adb shell wm size reset<br>adb shell wm density reset<br></code></pre></td></tr></table></figure><p>保存后，回到实例控制台，点击计划任务。</p><p>点击新增，根据自己实际情况设置即可。</p><hr><p>enjoy</p>]]></content>
    
    
    <categories>
      
      <category>旧手机利用</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BAAH</tag>
      
      <tag>Termux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用手机搭建家庭服务器实战</title>
    <link href="/2024/04/04/%E4%BD%BF%E7%94%A8%E6%89%8B%E6%9C%BA%E6%90%AD%E5%BB%BA%E5%AE%B6%E5%BA%AD%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%9E%E6%88%98/"/>
    <url>/2024/04/04/%E4%BD%BF%E7%94%A8%E6%89%8B%E6%9C%BA%E6%90%AD%E5%BB%BA%E5%AE%B6%E5%BA%AD%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%9E%E6%88%98/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>之前发布了<a href="/2024/02/09/%E6%97%A7%E6%89%8B%E6%9C%BA%E9%87%8D%E6%96%B0%E5%88%A9%E7%94%A8%E6%8C%87%E5%8D%97/">旧手机重新利用指南</a>，既然教程都出了，干脆就直接来实战一把。</p><h1 id="使用道具"><a href="#使用道具" class="headerlink" title="使用道具"></a>使用道具</h1><p>一台手机：我使用的是一台HUAWEI Nova 10 ，高通骁龙778G也就只可以处理一些简单的工作了。</p><p>ZeroTermux软件</p><h1 id="特殊说明"><a href="#特殊说明" class="headerlink" title="特殊说明"></a>特殊说明</h1><p>我为了管理方便以及获得更多的功能，就直接将<a href="/2024/02/09/%E6%97%A7%E6%89%8B%E6%9C%BA%E9%87%8D%E6%96%B0%E5%88%A9%E7%94%A8%E6%8C%87%E5%8D%97/">旧手机重新利用指南</a>中提到的服务大部分都直接部署在proot容器中的Arch Linux上了。</p><h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><h2 id="首先，换源！"><a href="#首先，换源！" class="headerlink" title="首先，换源！"></a>首先，换源！</h2><p>首先，临时换源，用ZeroTermux的辅助侧边栏就行。</p><p>然后我直接使用的<code>termux-change-repo</code>中的<code>China Mirror Group</code>，省去一个一个Ping。（什么时候pacman和apt有这个特性啊）</p><p>当然，为了保持软件最新，我使用的ZeroTermux中的自动任务来自动更新，每隔30分钟就<code>pkg update &amp;&amp; yes y | pkg upgrade</code></p><h2 id="然后，Arch-Linux-启动！"><a href="#然后，Arch-Linux-启动！" class="headerlink" title="然后，Arch Linux 启动！"></a>然后，Arch Linux 启动！</h2><p>使用tmoe工具快速创建并初始化Arch Linux的Proot容器。直接用<code>pkg install curl -y &amp;&amp; bash -c &quot;$(curl -L https://gitee.com/mo2/linux/raw/2/2)&quot;</code>启动tmoe tools，按照指示慢慢部署就行。</p><p>不过，有很多人直接使用root用户，我建议不要这么做，小心<code>rm -rf ./</code>少输一个<strong>点</strong>，然后，就白忙活了。我的建议是分配一个admin用户，然后给sudo权限，比较安全，至少不会全都挂掉。</p><p>顺带一提，proot容器中的openssh有大bug（在我的Arch Linux是这样），你无法直接使用ssh连入容器，即使你的账户密钥密码全对，且分配1024以上且不一样的端口。就只会提示<strong>验证错误</strong>，每次只可以ssh到Termux再用proot进入容器。</p><p><strong>相 当 烦 人</strong></p><p><img src="/img/%E4%BD%BF%E7%94%A8%E6%89%8B%E6%9C%BA%E6%90%AD%E5%BB%BA%E5%AE%B6%E5%BA%AD%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%9E%E6%88%98/f0702c17f10009d27abe6b36215a0fef141432942.jpg"></p><h1 id="解决远程访问"><a href="#解决远程访问" class="headerlink" title="解决远程访问"></a>解决远程访问</h1><p>知周所众，中国的静态公网IP一贯是难以申请的（特别是中国移动），没有办法，就直接使用远程组网了。</p><p>看看国内标杆<strong>蒲公英</strong></p><p><img src="/img/%E4%BD%BF%E7%94%A8%E6%89%8B%E6%9C%BA%E6%90%AD%E5%BB%BA%E5%AE%B6%E5%BA%AD%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%9E%E6%88%98/screenshot-1712288868303.png"></p><p>好吧，用不起。。。</p><p>然后试试ZeroTier，我承认，我对的我英语水平太自信了，直接PASS</p><p>后面在Bing搜索相关关键字，找到了这个玩意</p><p><a href="ip4.ink">星空组网</a></p><p><img src="/img/%E4%BD%BF%E7%94%A8%E6%89%8B%E6%9C%BA%E6%90%AD%E5%BB%BA%E5%AE%B6%E5%BA%AD%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%9E%E6%88%98/image.png"></p><p>虽然小众，但是好用，同时免费版完全满足需求。</p><p>直接白嫖！！！</p><p>实际使用下来也挺不错的，就算挂了也没有太大关系，反正不是主要需求。</p><h1 id="服务部署"><a href="#服务部署" class="headerlink" title="服务部署"></a>服务部署</h1><p>我把所有服务全部部署在了<code>/app</code>目录下，方便管理。</p><h2 id="管理面板"><a href="#管理面板" class="headerlink" title="管理面板"></a>管理面板</h2><p>使用了<a href="mcsmanager.com">MCSManager</a>来管理</p><p><a href="/2024/02/09/%E6%97%A7%E6%89%8B%E6%9C%BA%E9%87%8D%E6%96%B0%E5%88%A9%E7%94%A8%E6%8C%87%E5%8D%97/">旧手机重新利用指南</a></p><p>不过，相比于部署教程中的环境，在容器中可用的功能更多。如仿真终端。</p><h2 id="引导页"><a href="#引导页" class="headerlink" title="引导页"></a>引导页</h2><p>先安装nginx，在终端执行<code>sudo pacman -S nginx</code></p><p>在MCSManager中创建实例，启动命令直接<code>nginx</code>，工作目录改为&#x2F;app&#x2F;nginx&#x2F;</p><p>然后修改nginx的配置，改端口和网页目录。</p><p>网页文件直接参考<a href="https://github.com/horatio/home">horatio的home</a>去修改。效果大差不差。</p><p><del>horatio的home好像删库了</del></p><p><del>奥托主教，再带我冲一次虚数之树吧</del></p><h2 id="Cloudreve"><a href="#Cloudreve" class="headerlink" title="Cloudreve"></a>Cloudreve</h2><p>这个部署是最轻松的，对着<a href="/2024/02/09/%E6%97%A7%E6%89%8B%E6%9C%BA%E9%87%8D%E6%96%B0%E5%88%A9%E7%94%A8%E6%8C%87%E5%8D%97/">旧手机重新利用指南</a>部署即可</p><p>不过我在文件头部加了echo来帮助我记住管理员账户。</p><h2 id="jellyfin（wasted）"><a href="#jellyfin（wasted）" class="headerlink" title="jellyfin（wasted）"></a>jellyfin（wasted）</h2><p>这个一直都没有搞好，主要是proot容器中的<code>systemctl</code>问题，导致服务无法启动，相关问题tmoe大佬给出的解决方案是使用<code>service</code>命令，但是，Arch Linux中没有，后面看一下AUR中有没有，不过大概率是没有的（Arm架构的原因）</p><h2 id="Code-Server"><a href="#Code-Server" class="headerlink" title="Code Server"></a>Code Server</h2><p>这个服务部署起来相对轻松，从Github Releases下载好为arm架构编译好的程序，创建实例，解压文件，创建运行脚本。</p><p>不过和其他相比，因为Code Server配置文件目录的原因。要在脚本头部添加复制命令来达到管理配置文件的效果。</p><h2 id="aria2rpc"><a href="#aria2rpc" class="headerlink" title="aria2rpc"></a>aria2rpc</h2><p>相当轻松，直接略过。</p><h2 id="MC服务器"><a href="#MC服务器" class="headerlink" title="MC服务器"></a>MC服务器</h2><p>这个是最考验手机性能的，而且因为arm架构的原因无法使用Forge服务端，只可以使用插件端，Fabric端和原版端，详细开服直接参照B站教学即可。</p><h2 id="自动任务"><a href="#自动任务" class="headerlink" title="自动任务"></a>自动任务</h2><p>直接使用MCSManager中的计划任务即可，不过不支持WebHook就没法在自己的服务器上部署自动构建博客了。你问我为啥不用Github Action，问就是不会。</p><p>自己挂了每日零点自动<code>yes y | pacman -Syyuu</code></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>在实际部署过程中，还是遇到的不少错误，不过还是跑起来了！（喜）</p>]]></content>
    
    
    <categories>
      
      <category>旧手机利用</category>
      
    </categories>
    
    
    <tags>
      
      <tag>旧手机利用</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>旧手机重新利用指南</title>
    <link href="/2024/02/09/%E6%97%A7%E6%89%8B%E6%9C%BA%E9%87%8D%E6%96%B0%E5%88%A9%E7%94%A8%E6%8C%87%E5%8D%97/"/>
    <url>/2024/02/09/%E6%97%A7%E6%89%8B%E6%9C%BA%E9%87%8D%E6%96%B0%E5%88%A9%E7%94%A8%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[<h1 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h1><p>在当今数字化时代的璀璨篇章中，智能手机已成为我们生活与工作不可分割的伙伴，是我们探索数字世界的神奇钥匙。随着科技界不断推陈出新，一部手机的平均服务周期约莫2.2年，这一现象不仅反映了科技发展的惊人速度，也意味着大量旧手机将步入退役阶段。然而，这些曾经的科技精灵，并未真正失去它们的魔力。它们依然拥有转化为宝贵科技资源的无限潜能，等待着我们以创新的思维去挖掘。</p><p>本篇文章旨在深入探讨如何通过科技创新，实现旧手机的高效回收与再利用，从而开启它们的第二生命。</p><h1 id="材料准备"><a href="#材料准备" class="headerlink" title="材料准备"></a>材料准备</h1><p>一部手机，ZeroTermux软件（提供Linux终端服务，项目主页<a href="https://github.com/hanxinhao000/ZeroTermux.git">https://github.com/hanxinhao000/ZeroTermux.git</a>）</p><h1 id="必须步骤"><a href="#必须步骤" class="headerlink" title="必须步骤"></a>必须步骤</h1><h2 id="更换Termux软件源"><a href="#更换Termux软件源" class="headerlink" title="更换Termux软件源"></a>更换Termux软件源</h2><p>参考USTC的换源步骤</p><blockquote><h1 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h1><p>Termux 目前（2022 年 8 月）的官方源为 packages.termux.dev，我们推荐先更新 <code>termux-tools</code> 软件包，然后直接使用 <code>termux-change-repo</code> 先选择 Single mirror，再选择 mirrors.ustc.edu.cn 即可。</p><p>如果想要手动更换 Termux APT 源的话，可以编辑 :file:<code>/data/data/com.termux/files/usr/etc/apt/sources.list</code> 为如下内容</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">&gt;deb https:<span class="hljs-regexp">//mi</span>rrors.ustc.edu.cn<span class="hljs-regexp">/termux/</span>apt/termux-main stable main<br></code></pre></td></tr></table></figure><p>或者，你也可以使用 <code>sed</code> 命令进行文本替换：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">&gt;sed -i <span class="hljs-string">&#x27;s@packages.termux.org@mirrors.ustc.edu.cn/termux@&#x27;</span> <span class="hljs-variable">$PREFIX</span>/etc/apt/sources.list<br>&gt;pkg update<br></code></pre></td></tr></table></figure><p>注：Termux 会自动将环境变量 <code>$PREFIX</code> 设定为 :file:<code>/data/data/com.termux/files/usr</code></p><p><strong>warning</strong><br>   Google Play 上的 Termux 已被弃用，如安装会产生兼容性问题。请通过 GitHub 或 F-Droid 来安装 Termux。</p></blockquote><p>在完成这些步骤后，执行下列命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">yes</span> y | pkg upgrade<br></code></pre></td></tr></table></figure><h2 id="安装管理面板（mcsmanager）"><a href="#安装管理面板（mcsmanager）" class="headerlink" title="安装管理面板（mcsmanager）"></a>安装管理面板（mcsmanager）</h2><p>下列可选功能的部署大多都会以此面板作基础</p><p>首先，安装nodejs，在终端执行<code>pkg install nodejs-lts -y</code>，如果不想使用lts版本的nodejs的话，可以执行<code>pkg install nodejs -y</code>来安装最新适配Termux的nodejs</p><p>然后，依次执行以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装git</span><br>pkg install git -y<br><br><span class="hljs-comment"># 克隆面板端程序（Web）</span><br>git <span class="hljs-built_in">clone</span> https://gitee.com/MCSManager/MCSManager-Web-Production.git<br><span class="hljs-built_in">mv</span> MCSManager-Web-Production web<br><span class="hljs-comment"># 补全依赖</span><br><span class="hljs-built_in">cd</span> ./web/<br>npm install --production --registry=https://registry.npmmirror.com/<br><span class="hljs-built_in">cd</span> ../<br><br><span class="hljs-comment"># 克隆守护进程程序（Daemon）</span><br>git <span class="hljs-built_in">clone</span> https://gitee.com/MCSManager/MCSManager-Daemon-Production.git<br><span class="hljs-built_in">mv</span> MCSManager-Daemon-Production daemon<br><br><span class="hljs-comment"># 补全依赖</span><br><span class="hljs-built_in">cd</span> ./daemon/<br>npm install --production --registry=https://registry.npmmirror.com/<br><span class="hljs-built_in">cd</span> ../<br></code></pre></td></tr></table></figure><p>最后，创建启动脚本，可以使用nano编辑器来创建</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-comment"># start-daemon.sh</span><br>cd ./daemon/<br><span class="hljs-keyword">node</span> <span class="hljs-title">app</span>.js<br><br><span class="hljs-comment"># start-web.sh</span><br>cd ./web/<br><span class="hljs-keyword">node</span> <span class="hljs-title">app</span>.js<br></code></pre></td></tr></table></figure><p>不要忘记给两个脚本赋予可执行权限</p><p>启动面板只需要开启两个会话并分别输入<code>./start-daemon.sh</code>和<code>./start-web.sh</code></p><p>建议自行创建实例目录结构，避免找不到</p><h1 id="可选应用部署"><a href="#可选应用部署" class="headerlink" title="可选应用部署"></a>可选应用部署</h1><p>下列内容可以按需部署</p><h2 id="ssh服务"><a href="#ssh服务" class="headerlink" title="ssh服务"></a>ssh服务</h2><p>运行<code>pkg install openssh termux-auth</code>来安装ssh服务</p><p>然后运行<code>whoami</code>来查看用户，运行<code>passwd</code>来设置密码（密码不显示，输入两次）</p><p>最后运行<code>sshd</code></p><p>接下来就可以在其他电脑上输入<code>ssh （用户名）@（IP地址） -p 8022</code>来连接到你的手机.</p><h2 id="网页服务（nginx）"><a href="#网页服务（nginx）" class="headerlink" title="网页服务（nginx）"></a>网页服务（nginx）</h2><p>首先运行<code>pkg install nginx -y</code>，然后运行<code>nginx</code>编辑 <strong>&#x2F;data&#x2F;data&#x2F;com.termux&#x2F;files&#x2F;usr&#x2F;etc&#x2F;nginx&#x2F;nginx.conf</strong> 将端口，网站根目录修改为一个更加方便的目录</p><p>最后根据mcsmanager的自定义实例要求来设置实例</p><p>实例名（参考）：nginx</p><p>启动命令：nginx</p><p>目录（参考）：&#x2F;data&#x2F;data&#x2F;com.termux&#x2F;files&#x2F;home&#x2F;examples&#x2F;nginx</p><h2 id="NAS服务（Cloudreve）"><a href="#NAS服务（Cloudreve）" class="headerlink" title="NAS服务（Cloudreve）"></a>NAS服务（Cloudreve）</h2><h3 id="Cloudreve主程序"><a href="#Cloudreve主程序" class="headerlink" title="Cloudreve主程序"></a>Cloudreve主程序</h3><p>首先，下载Cloudreve的程序.</p><p>然后，根据mcsmanager的自定义实例要求来设置实例</p><p>实例名（参考）：Cloudreve</p><p>启动命令：<code>bash start.sh</code></p><p>目录（参考）：&#x2F;data&#x2F;data&#x2F;com.termux&#x2F;files&#x2F;home&#x2F;examples&#x2F;cloudreve</p><p>最后，上传程序主程序，编写脚本，名称<code>start.sh</code>，内容为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> 777 ./cloudreve<br>./cloudreve<br></code></pre></td></tr></table></figure><p>接下来就可以在 <strong>（IP地址）:5212</strong> 访问cloudreve主程序，然后根据面板上出现的管理员帐号和密码来登录进行管理</p><h3 id="配置离线下载"><a href="#配置离线下载" class="headerlink" title="配置离线下载"></a>配置离线下载</h3><p>首先，在终端里运行<code>pkg install aria2 -y</code>来安装aria2</p><p>然后根据mcsmanager的自定义实例要求来设置实例（是不是有点太啰嗦了）</p><p>启动命令：<code>aria2c --conf-path=aria2.conf</code></p><p>然后，创建 <strong>aria2.conf</strong> 和 <strong>aria2.session</strong> 文件，<strong>aria2.session</strong> 文件为空，<strong>aria2.conf</strong> 可以参考我的来配置</p><p>[文件] <a href="/resource/%E6%97%A7%E6%89%8B%E6%9C%BA%E9%87%8D%E6%96%B0%E5%88%A9%E7%94%A8%E6%8C%87%E5%8D%97/aria2.conf">aria2.conf</a></p><p>最后，启动实例，并进入Cloudreve的管理面板配置离线下载，即可使用离线下载功能</p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>在本篇《旧手机重新利用指南》的博客文章中，我们深入探讨了如何将旧手机赋予新的生命。通过挖掘旧手机的潜力，我们不仅延长了它们的使用寿命，还为环保事业贡献了力量。</p><p>重新利用旧手机不仅仅是一种行为，更是一种态度和责任。在享受科技带来的便利的同时，我们也要意识到资源有限、环境宝贵。通过重新利用旧手机，我们为减少电子垃圾、节约资源做出了积极的努力。</p><p>每一个人都可以参与到环保事业中来，从自身做起，关注环境保护，推动可持续发展。感谢您阅读本文，希望这些指南能够启发您对旧手机再利用的想法，并且能够在日常生活中践行可持续发展的理念。让我们共同努力，为创造一个更加清洁、美丽的地球而行动！</p><p>开头结尾：ChatGPT</p><p>实际编写者：BlockHaity</p>]]></content>
    
    
    <categories>
      
      <category>旧手机利用</category>
      
    </categories>
    
    
    <tags>
      
      <tag>旧手机利用</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>XPVPer 一个专注于美观和PVP的Minecraft整合包</title>
    <link href="/2023/06/30/XPVPer-%E4%B8%80%E4%B8%AA%E4%B8%93%E6%B3%A8%E4%BA%8E%E7%BE%8E%E8%A7%82%E5%92%8CPVP%E7%9A%84Minecraft%E6%95%B4%E5%90%88%E5%8C%85/"/>
    <url>/2023/06/30/XPVPer-%E4%B8%80%E4%B8%AA%E4%B8%93%E6%B3%A8%E4%BA%8E%E7%BE%8E%E8%A7%82%E5%92%8CPVP%E7%9A%84Minecraft%E6%95%B4%E5%90%88%E5%8C%85/</url>
    
    <content type="html"><![CDATA[<h1 align="center">  <br>  <img src="https://s1.ax1x.com/2023/06/07/pCFC7dK.png"/></a>  <br>  XPVPer  <br></h1><h2 align="center">一个专注于美观和PVP的Minecraft整合包</h2><p><a href="https://github.com/BlockHaity/XPVPer">项目主页</a></p><h1 id="XPVPer是什么"><a href="#XPVPer是什么" class="headerlink" title="XPVPer是什么"></a>XPVPer是什么</h1><p>XPVPer是一个基于Minecraft Java Edition 1.8.9，Forge，LabyMOD制作的整合包</p><p><strong>注意！！！XPVPer不是Minecraft客户端，更不会成为Minecraft客户端</strong></p><h1 id="有什么亮点"><a href="#有什么亮点" class="headerlink" title="有什么亮点"></a>有什么亮点</h1><p><em>注：以下内容皆以原版作为比较</em></p><h2 id="更加美观的UI"><a href="#更加美观的UI" class="headerlink" title="更加美观的UI"></a>更加美观的UI</h2><p><a href="https://imgse.com/i/pCFLKqe"><img src="https://s1.ax1x.com/2023/06/07/pCFLKqe.png" alt="pCFLKqe.png"></a></p><p><em>左侧为XPVPer右侧为原版Minecraft</em></p><p><a href="https://imgse.com/i/pCFXaNj"><img src="https://s1.ax1x.com/2023/06/07/pCFXaNj.png" alt="pCFXaNj.png"></a></p><p>使用FancyMenu，Blur，LabyMOD等MOD实现。</p><h2 id="高度的可自定义性"><a href="#高度的可自定义性" class="headerlink" title="高度的可自定义性"></a>高度的可自定义性</h2><p>作者不封死包括FancyMenu的配置栏 <del>（虽然真的很丑）</del> ，UI资源包在内的所有自定义项，给用户完全的界面自由。</p><p><a href="https://imgse.com/i/pCFX5gx"><img src="https://s1.ax1x.com/2023/06/07/pCFX5gx.png" alt="pCFX5gx.png"></a></p><p><a href="https://imgse.com/i/pCFXO5d"><img src="https://s1.ax1x.com/2023/06/07/pCFXO5d.png" alt="pCFXO5d.png"></a></p><h2 id="还有更多等待挖掘。。。"><a href="#还有更多等待挖掘。。。" class="headerlink" title="还有更多等待挖掘。。。"></a>还有更多等待挖掘。。。</h2><h1 id="如何安装使用"><a href="#如何安装使用" class="headerlink" title="如何安装使用"></a>如何安装使用</h1><ol><li><p>MCBBS整合包格式安装。含有HMCL的压缩包安装。<br>参照 <a href="https://github.com/BlockHaity/XPVPer/releases">Releases</a> 给出的教程即可。</p></li><li><p>命令行安装<br>参照 <a href="https://github.com/BlockHaity/XPVPer/tree/Runner">Runner分支</a> 进行操作即可</p></li></ol><h1 id="如何为此项目做贡献"><a href="#如何为此项目做贡献" class="headerlink" title="如何为此项目做贡献"></a>如何为此项目做贡献</h1><h2 id="发现Bug"><a href="#发现Bug" class="headerlink" title="发现Bug"></a>发现Bug</h2><p>发现Bug后在 <a href="https://github.com/BlockHaity/XPVPer/discussions">Discussions</a> 内进行发帖讨论，获得解决方案后提交issuse。</p><h2 id="提出建议"><a href="#提出建议" class="headerlink" title="提出建议"></a>提出建议</h2><p>在 <a href="https://github.com/BlockHaity/XPVPer/discussions">Discussions</a> 内提出你的建议，探讨出解决方案后提交Issuse</p><h2 id="直接动手改代码（PR）"><a href="#直接动手改代码（PR）" class="headerlink" title="直接动手改代码（PR）"></a>直接动手改代码（PR）</h2><p>在根目录新建一个 <code>PR.md</code> 用来描述你做的改动和实现的功能，后提交PR</p><h2 id="为什么采用先讨论得到方案后再提交issuse的方式"><a href="#为什么采用先讨论得到方案后再提交issuse的方式" class="headerlink" title="为什么采用先讨论得到方案后再提交issuse的方式"></a>为什么采用先讨论得到方案后再提交issuse的方式</h2><p>作者是一名学生，没有太多时间来探讨解决方案，并且作者不太会Java等语言。这样做就可以提升此项目修复Bug的速度。</p><h1 id="已知Bug"><a href="#已知Bug" class="headerlink" title="已知Bug"></a>已知Bug</h1><h2 id="在进入-单人游戏-或-多人游戏-界面后调整窗口大小会导致界面错位的问题。"><a href="#在进入-单人游戏-或-多人游戏-界面后调整窗口大小会导致界面错位的问题。" class="headerlink" title="在进入 单人游戏 或 多人游戏 界面后调整窗口大小会导致界面错位的问题。"></a>在进入 <strong>单人游戏</strong> 或 <strong>多人游戏</strong> 界面后调整窗口大小会导致界面错位的问题。</h2><p>影响评级：高</p><p>是否可以解决：否</p><p>原因：该Bug是由FancyMenu所导致的，而适用于Minecraft 1.8.9 Forge的FancyMenu已经停更。无法通过除改源代码的方法修复。</p><p>治标不治本的方案：先最大化窗口再进入 <strong>单人游戏</strong> 或 <strong>多人游戏</strong> 界面，在后续使用中尽量避免拉伸窗口。</p><h1 id="相关问答"><a href="#相关问答" class="headerlink" title="相关问答"></a>相关问答</h1><p>Q：为什么不制作Minecraft客户端，它明明比整合包更加好</p><p>A：首要原因：不会写。次要原因：我认为不自由，Minecraft客户端只能让用户关闭功能，而不能删除功能。而整合包可以让用户直接删除一些功能。高度模块化是我喜欢的一种制作表现，当然这是有代价的，这样制作无法深度修改Minecraft。</p><p>Q：XPVPer含不含有作弊功能</p><p>A：没有，作者甚至想通过客户端文件覆盖的方法来反作弊，但一直没有一个有效的方案 <del>至少要防个水影和VAPE</del></p>]]></content>
    
    
    <categories>
      
      <category>自制项目</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Minecraft</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo写作指南</title>
    <link href="/2023/06/05/Hexo%E5%86%99%E4%BD%9C%E6%8C%87%E5%8D%97/"/>
    <url>/2023/06/05/Hexo%E5%86%99%E4%BD%9C%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[<div class="admonition info"><p class="admonition-title">提示</p><p>这篇文章是方便作者使用部分语法的，~~不会考虑他人感受~~</p></div><h2 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h2><p>先将图片上传到图床，然后采用Markdown图片插入即可。</p><p>插入图片语法</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Markdown">![<span class="hljs-string">这是图片</span>](<span class="hljs-link">/assets/img/philly-magic-garden.jpg &quot;Magic Gardens&quot;</span>)<br></code></pre></td></tr></table></figure><h2 id="锚点"><a href="#锚点" class="headerlink" title="锚点"></a>锚点</h2><p>链接语法右侧括号内填写 <code>#+二级标题</code> 即可</p><p>链接语法</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Markdown">[<span class="hljs-string">Markdown语法</span>](<span class="hljs-link">https://markdown.com.cn</span>)<br></code></pre></td></tr></table></figure><h2 id="插入B站视频"><a href="#插入B站视频" class="headerlink" title="插入B站视频"></a>插入B站视频</h2><p>只需要把 <code>//player.bilibili.com/player.html?aid=90978812&amp;cid=155358422&amp;page=1</code> 替换成自己的就行。</p><p>以 <strong>【8K超高清完整版】瑞克·埃斯利（你被骗了）《Never Gonna Give You Up》</strong> 作为演示</p><p>从B战复制过来的</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;//player.bilibili.com/player.html?aid=651820362&amp;bvid=BV1he4y1w7wB&amp;cid=1006811391&amp;page=1&quot;</span> <span class="hljs-attr">scrolling</span>=<span class="hljs-string">&quot;no&quot;</span> <span class="hljs-attr">border</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">frameborder</span>=<span class="hljs-string">&quot;no&quot;</span> <span class="hljs-attr">framespacing</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">allowfullscreen</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span><br></code></pre></td></tr></table></figure><p>实际使用的</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs HTML">&#123;% raw %&#125;<br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position: relative; width: 100%; height: 0; padding-bottom: 75%;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;//player.bilibili.com/player.html?aid=651820362&amp;bvid=BV1he4y1w7wB&amp;cid=1006811391&amp;page=1&quot;</span> <span class="hljs-attr">scrolling</span>=<span class="hljs-string">&quot;no&quot;</span> <span class="hljs-attr">border</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">frameborder</span>=<span class="hljs-string">&quot;no&quot;</span> <span class="hljs-attr">framespacing</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">allowfullscreen</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position: absolute; width: 100%; height: 100%; Left: 0; top: 0;&quot;</span> &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>&#123;% endraw %&#125;<br></code></pre></td></tr></table></figure><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=651820362&bvid=BV1he4y1w7wB&cid=1006811391&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;" ></iframe></div>]]></content>
    
    
    
    <tags>
      
      <tag>瞎说</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何安装Deepin（弃用）</title>
    <link href="/2023/05/27/%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85Deepin/"/>
    <url>/2023/05/27/%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85Deepin/</url>
    
    <content type="html"><![CDATA[<h2 id="特别注意"><a href="#特别注意" class="headerlink" title="特别注意"></a>特别注意</h2><p>本文章已被作者弃用，无法保证这篇文章的有效性。</p><h2 id="什么是Deepin"><a href="#什么是Deepin" class="headerlink" title="什么是Deepin"></a>什么是Deepin</h2><p>（不想看的点击<a href="#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C">这里</a>）</p><p>深度操作系统是基于Linux内核，以桌面应用为主的开源GNU&#x2F;Linux操作系统，支持笔记本、台式机和一体机。深度操作系统（deepin）包含深度桌面环境（DDE）和近30款深度原创应用，及数款来自开源社区的应用软件，支撑广大用户日常的学习和工作。另外，通过深度商店还能够获得近千款应用软件的支持，满足您对操作系统的扩展需求。深度操作系统由专业的操作系统研发团队和深度技术社区共同打造，其名称来自深度技术社区名称“deepin”一词，意思是对人生和未来深刻的追求和探索。 </p><p>深度操作系统（deepin）是中国第一个具备国际影响力的Linux发行版本，截止至2019年7月25日，深度操作系统支持33种语言，用户遍布除了南极洲的其它六大洲。深度桌面环境（DDE）和大量的应用软件被移植到了包括Fedora、Ubuntu、Arch等十余个国际Linux发行版和社区。 </p><p>他在Linux内核树的关系如下</p><p><img src="/img/%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85Deepin/ppHVZJx.png" alt="Deepin所在内核树的关系"></p><hr><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="查看启动方式"><a href="#查看启动方式" class="headerlink" title="查看启动方式"></a>查看启动方式</h3><p>按下 <code>Win+R</code> ，输入 <code>msinfo32</code> ,查看 <code>BIOS模式</code> 这一栏。</p><p><img src="/img/%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85Deepin/ppHBMwQ.png" alt="msinfo32界面"></p><p>如果你 <code>BIOS模式</code> 这一栏显示的不是 <code>UEFI</code> 的话，那么恭喜你，你可以直接点击<a href="#%E5%87%86%E5%A4%87%E8%AE%BE%E5%A4%87%E5%92%8C%E8%BD%AF%E4%BB%B6">这里</a>来查看下一步，如果是 <code>UEFI</code> 的话，请继续看下去。</p><h4 id="关闭安全启动"><a href="#关闭安全启动" class="headerlink" title="关闭安全启动"></a>关闭安全启动</h4><p>打开你的浏览器，搜索你电脑品牌或主板品牌的BIOS启动快捷键。</p><p>重启电脑，在电脑屏幕黑掉后狂按BIOS启动快捷键。进入BIOS。</p><p>使用键盘的上下左右按键来定位到 <code>Secure Boot</code> 将右边的 <code>Enabled</code> 改为 <code>Disabled</code> </p><p>按下 <code>Esc</code> ，选择 <code>Save and Exit</code> 回车。退出。</p><h3 id="准备设备和软件"><a href="#准备设备和软件" class="headerlink" title="准备设备和软件"></a>准备设备和软件</h3><p><img src="/img/%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85Deepin/p9SdTN6.png" alt="所需设备和软件"></p><p>Deepin V20镜像下载地址<a href="https://www.deepin.org/zh/download/">https://www.deepin.org/zh/download/</a></p><p>Ventoy下载地址<a href="https://blockhaity.lanzoux.com/i6okc0xgahzc">https://blockhaity.lanzoux.com/i6okc0xgahzc</a></p><p>DiskGenius下载地址<a href="https://blockhaity.lanzoux.com/i6okc0xgahzc">https://blockhaity.lanzoux.com/i6okc0xgahzc</a></p><hr><h2 id="制作启动U盘"><a href="#制作启动U盘" class="headerlink" title="制作启动U盘"></a>制作启动U盘</h2><p><strong>注意！该操作会清空你的U盘数据，请备份后操作！！！</strong></p><p><strong>注意！该操作会清空你的U盘数据，请备份后操作！！！</strong></p><p><strong>注意！该操作会清空你的U盘数据，请备份后操作！！！</strong></p><p>下载并解压Ventoy,将你的U盘插入你的电脑，进入ventoy-1.0.91文件夹，打开Ventoy2Disk。就可以看到如下界面。</p><p><img src="/img/%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85Deepin/ppHBeQf.png" alt="Ventoy界面"></p><p>在设备一栏选择你的U盘，点击安装，连续点击两次确认。然后将下载好的Deepin V20镜像拷贝到U盘即可。</p><h2 id="进行磁盘分区"><a href="#进行磁盘分区" class="headerlink" title="进行磁盘分区"></a>进行磁盘分区</h2><p><strong>注意！该操作若是不规范或误操作，轻则系统暴毙，数据丢失。重则硬盘分区表损坏！请谨慎操作！！！</strong></p><p><strong>注意！该操作若是不规范或误操作，轻则系统暴毙，数据丢失。重则硬盘分区表损坏！请谨慎操作！！！</strong></p><p><strong>注意！该操作若是不规范或误操作，轻则系统暴毙，数据丢失。重则硬盘分区表损坏！请谨慎操作！！！</strong></p><p>下载并解压DiskGenius，进入DiskGenius文件夹，打开DiskGenius。就可以看到如下界面。</p><p><img src="/img/%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85Deepin/p9p7z7R.png" alt="DiskGenius界面"></p><p>选择你的C盘或D盘，点击调整分区容量。如下图这样配置。后部容量在40~20GB即可，点击确定</p><p><img src="/img/%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85Deepin/p9pHNEn.png" alt="调整分区容量"></p><p>点击确认，再点击灰色区域，点击建立新分区，如下图这样配置。点击确定</p><p><img src="/img/%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85Deepin/p9pquSf.png" alt="建立分区"></p><p>配置完成后，点击保存修改。</p><h2 id="从U盘启动并安装"><a href="#从U盘启动并安装" class="headerlink" title="从U盘启动并安装"></a>从U盘启动并安装</h2><p>如何启动请参考<a href="https://wiki.edgeless.top/v2/guide/boot.html">https://wiki.edgeless.top/v2/guide/boot.html</a></p><p>tips：如果正在 <a href="#%E6%9F%A5%E7%9C%8B%E5%90%AF%E5%8A%A8%E6%96%B9%E5%BC%8F">查看启动方式</a> 中查看到是非UEFI的话，就一定再启动时不要选择带UEFI字段的启动项。</p><p>在参照上面的链接的教程进入Ventoy界面后，双击回车。</p><p>启动后，会进入如下图的界面，勾选 <strong>我已仔细阅读…..</strong> 左边的复选框，再点击下一步。</p><p><img src="/img/%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85Deepin/p991nZ8.png" alt="安装界面"></p><p>出现如下图所示的界面，点击手动安装。</p><p><img src="/img/%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85Deepin/p991udS.png" alt="安装界面1"></p><p>如下图所示，点击右侧为ext4的分区。</p><p><img src="/img/%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85Deepin/p991KIg.png" alt="安装界面2"></p><p>点击右侧的铅笔✏️图标，按下图所示配置。</p><p><img src="/img/%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85Deepin/p991udS.png" alt="分区配置"></p><p>点击确定，点击下一步，再点击确定。再点击下一步，再点击继续安装。然后泡杯茶，等待即可</p><p><del>Swap分区在消费级领域基本没用了还TM提醒</del></p><p>然后显示如下图的界面，点击立即重启，然后拔掉U盘。等待进入系统后，安装自己的喜好配置即可。</p><p>特别提醒，用户名不可以为中文和特殊符号，密码同理。密码要牢记！！！再后面的相关优化等步骤要用到。</p><h2 id="相关优化（有难度，可以不执行）"><a href="#相关优化（有难度，可以不执行）" class="headerlink" title="相关优化（有难度，可以不执行）"></a>相关优化（有难度，可以不执行）</h2><p>点击左下角的程序列表，找到终端，打开，并执行以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Bash">sudo apt update<br>sudo apt install deepin-wine<br>sudo apt install spark-store<br></code></pre></td></tr></table></figure><h2 id="相关问题"><a href="#相关问题" class="headerlink" title="相关问题"></a>相关问题</h2><p>Q:软件从哪里下。</p><p>A:可以从Deepin自带的软件商城下载，跑过相关优化的可以从星火应用商店下载（推荐），如果要从软件官网下载的话，要认准Linux版，X64，deb格式</p><p>Q:我想要切换回Windows，要怎么操作</p><p>A:再开机时疯狂按上下键，选择 <code>Windows Boot Manager</code> 按下回车键即可进入Windows。</p>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>瞎说</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
